version: '3.8'

services:
  # HomeGenie Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:8080/api/v1}
        VITE_WS_BASE_URL: ${VITE_WS_BASE_URL:-ws://localhost:8080/ws}
        VITE_ENABLE_ANALYTICS: ${VITE_ENABLE_ANALYTICS:-true}
        VITE_ANALYTICS_TRACKING_ID: ${VITE_ANALYTICS_TRACKING_ID}
        VITE_SENTRY_DSN: ${VITE_SENTRY_DSN}
        VITE_GOOGLE_MAPS_API_KEY: ${VITE_GOOGLE_MAPS_API_KEY}
    ports:
      - "80:80"
    environment:
      - API_BASE_URL=${API_BASE_URL:-http://backend:8080}
      - WS_BASE_URL=${WS_BASE_URL:-ws://backend:8080}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - homegenie-network

  # Optional: Nginx reverse proxy (if using separate backend)
  nginx:
    image: nginx:alpine
    ports:
      - "443:443"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
    restart: unless-stopped
    networks:
      - homegenie-network

networks:
  homegenie-network:
    driver: bridge

# Example with external backend service
# services:
#   frontend:
#     # ... frontend configuration
#   
#   backend:
#     image: homegenie/backend:latest
#     ports:
#       - "8080:8080"
#     environment:
#       - DATABASE_URL=${DATABASE_URL}
#       - JWT_SECRET=${JWT_SECRET}
#     networks:
#       - homegenie-network
#   
#   database:
#     image: postgres:15-alpine
#     environment:
#       - POSTGRES_DB=homegenie
#       - POSTGRES_USER=${DB_USER}
#       - POSTGRES_PASSWORD=${DB_PASSWORD}
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     networks:
#       - homegenie-network
#
# volumes:
#   postgres_data:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homegenie-frontend
  namespace: homegenie
  labels:
    app.kubernetes.io/name: homegenie-frontend
    app.kubernetes.io/instance: homegenie
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: frontend
    app.kubernetes.io/part-of: homegenie
    app.kubernetes.io/managed-by: kubernetes
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: homegenie-frontend
      app.kubernetes.io/instance: homegenie
  template:
    metadata:
      labels:
        app.kubernetes.io/name: homegenie-frontend
        app.kubernetes.io/instance: homegenie
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/component: frontend
    spec:
      containers:
      - name: frontend
        image: your-registry/homegenie-frontend:latest
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: REACT_APP_API_URL
          value: "http://homegenie-backend:8080/api"
        - name: NODE_ENV
          value: "production"
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: tmp
          mountPath: /tmp
        - name: var-cache-nginx
          mountPath: /var/cache/nginx
        - name: var-run
          mountPath: /var/run
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 12
        securityContext:
          runAsNonRoot: true
          runAsUser: 101  # nginx user
          runAsGroup: 101
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE  # Allow nginx to bind to port 3000
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
          items:
          - key: nginx.conf
            path: nginx.conf
      - name: tmp
        emptyDir: {}
      - name: var-cache-nginx
        emptyDir: {}
      - name: var-run
        emptyDir: {}
      securityContext:
        fsGroup: 101
        seccompProfile:
          type: RuntimeDefault

---
apiVersion: v1
kind: Service
metadata:
  name: homegenie-frontend
  namespace: homegenie
  labels:
    app.kubernetes.io/name: homegenie-frontend
    app.kubernetes.io/instance: homegenie
    app.kubernetes.io/component: frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: homegenie-frontend
    app.kubernetes.io/instance: homegenie

---
# Horizontal Pod Autoscaler for Frontend
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: homegenie-frontend-hpa
  namespace: homegenie
  labels:
    app.kubernetes.io/name: homegenie-frontend
    app.kubernetes.io/instance: homegenie
    app.kubernetes.io/component: autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: homegenie-frontend
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 15
      selectPolicy: Max

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: homegenie-frontend-pdb
  namespace: homegenie
  labels:
    app.kubernetes.io/name: homegenie-frontend
    app.kubernetes.io/instance: homegenie
    app.kubernetes.io/component: frontend
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: homegenie-frontend
      app.kubernetes.io/instance: homegenie
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: homegenie
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: homegenie-postgres
    app.kubernetes.io/component: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast  # Use your cluster's fast storage class

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: homegenie
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: homegenie-postgres
    app.kubernetes.io/version: "15"
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: homegenie
    app.kubernetes.io/managed-by: kubernetes
spec:
  replicas: 1
  strategy:
    type: Recreate  # Required for stateful services with persistent storage
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
      app.kubernetes.io/instance: homegenie-postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres
        app.kubernetes.io/instance: homegenie-postgres
        app.kubernetes.io/version: "15"
        app.kubernetes.io/component: database
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        envFrom:
        - configMapRef:
            name: postgres-config
        - secretRef:
            name: postgres-secret
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: postgres-config-vol
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - homegenie
            - -d
            - homegenie
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - homegenie
            - -d
            - homegenie
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsUser: 999
          runAsGroup: 999
          fsGroup: 999
          allowPrivilegeEscalation: false
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-pvc
      - name: postgres-config-vol
        configMap:
          name: postgres-config
          items:
          - key: postgresql.conf
            path: postgresql.conf
      securityContext:
        fsGroup: 999

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: homegenie
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: homegenie-postgres
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
  selector:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: homegenie-postgres

---
# Redis for caching and sessions
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: homegenie
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: homegenie-redis
    app.kubernetes.io/component: cache
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: homegenie
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: homegenie-redis
    app.kubernetes.io/version: "7-alpine"
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: homegenie
    app.kubernetes.io/managed-by: kubernetes
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: homegenie-redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/instance: homegenie-redis
        app.kubernetes.io/version: "7-alpine"
        app.kubernetes.io/component: cache
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis
        args:
        - redis-server
        - --requirepass
        - $(REDIS_PASSWORD)
        - --appendonly
        - "yes"
        - --save
        - "900 1"
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: REDIS_PASSWORD
        volumeMounts:
        - name: redis-data
          mountPath: /data
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsUser: 999
          runAsGroup: 999
          allowPrivilegeEscalation: false
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: homegenie
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: homegenie-redis
    app.kubernetes.io/component: cache
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: homegenie-redis
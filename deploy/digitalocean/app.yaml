# DigitalOcean App Platform configuration for HomeGenie
name: homegenie
region: nyc

# Environment variables (add secrets via DO control panel)
envs:
  - key: ENVIRONMENT
    value: production
  - key: API_PORT
    value: "8080"
  - key: API_HOST
    value: "0.0.0.0"
  - key: CORS_ORIGINS
    value: "https://homegenie-app.com"
  - key: OTEL_SERVICE_NAME
    value: "homegenie"
  - key: OTEL_RESOURCE_ATTRIBUTES
    value: "service.name=homegenie,service.version=1.0.0,deployment.environment=production"

# Services
services:
  # Backend API Service
  - name: backend
    source_dir: /backend
    github:
      repo: your-username/homegenie
      branch: main
      deploy_on_push: true
    
    # Build configuration
    build_command: |
      go mod download
      CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main ./cmd/api
    
    # Runtime configuration
    run_command: ./main
    
    # Container settings
    instance_count: 2
    instance_size_slug: basic-xxs  # 0.5 vCPU, 0.5 GB RAM
    
    # Health check
    health_check:
      http_path: /health
      initial_delay_seconds: 10
      period_seconds: 30
      timeout_seconds: 5
      success_threshold: 1
      failure_threshold: 3
    
    # HTTP configuration
    http_port: 8080
    
    # Routes
    routes:
      - path: /api
      - path: /health
    
    # Environment variables specific to backend
    envs:
      - key: DB_HOST
        value: ${backend.DATABASE_URL}
      - key: DB_PORT
        value: "25060"
      - key: DB_NAME
        scope: RUN_TIME
        type: SECRET
        value: DB_NAME
      - key: DB_USER
        scope: RUN_TIME
        type: SECRET
        value: DB_USER
      - key: DB_PASSWORD
        scope: RUN_TIME
        type: SECRET
        value: DB_PASSWORD
      - key: JWT_SECRET
        scope: RUN_TIME
        type: SECRET
        value: JWT_SECRET
      - key: DATABASE_URL
        scope: RUN_TIME
        type: SECRET
        value: DATABASE_URL

  # Frontend Service
  - name: frontend
    source_dir: /frontend
    github:
      repo: your-username/homegenie
      branch: main
      deploy_on_push: true
    
    # Build configuration
    build_command: |
      npm ci
      npm run build
    
    # Runtime configuration (using nginx to serve static files)
    run_command: |
      cp -r dist/* /var/www/html/
      nginx -g 'daemon off;'
    
    # Container settings
    instance_count: 1
    instance_size_slug: basic-xxs  # 0.5 vCPU, 0.5 GB RAM
    
    # Health check
    health_check:
      http_path: /
      initial_delay_seconds: 10
      period_seconds: 30
      timeout_seconds: 5
      success_threshold: 1
      failure_threshold: 3
    
    # HTTP configuration
    http_port: 80
    
    # Routes (catch-all for React Router)
    routes:
      - path: /
    
    # Environment variables for build
    envs:
      - key: REACT_APP_API_URL
        value: https://${_self.backend.RENDERED_URL}/api
      - key: NODE_ENV
        value: production

# Database
databases:
  - name: homegenie-db
    engine: PG
    version: "15"
    size: db-s-1vcpu-1gb  # 1 vCPU, 1 GB RAM, 10 GB disk
    num_nodes: 1
    
    # Database configuration
    config:
      # Connection pooling
      pool_size: 25
      pool_mode: transaction
      
      # Backup configuration
      backup_retention_period_days: 7
      
      # Maintenance window
      maintenance_window_day: sunday
      maintenance_window_hour: 04

# Static sites (alternative to frontend service)
# Uncomment if you prefer to serve frontend as static site
# static_sites:
#   - name: frontend
#     source_dir: /frontend
#     github:
#       repo: your-username/homegenie
#       branch: main
#       deploy_on_push: true
#     
#     build_command: |
#       npm ci
#       REACT_APP_API_URL=https://homegenie-backend.ondigitalocean.app/api npm run build
#     
#     output_dir: /dist
#     
#     # Routes for React Router
#     routes:
#       - path: /
#     
#     # Error and index pages
#     index_document: index.html
#     error_document: index.html
#     
#     # Custom headers
#     headers:
#       - pattern: "**/*.js"
#         headers:
#           cache-control: "max-age=31536000"
#       - pattern: "**/*.css"
#         headers:
#           cache-control: "max-age=31536000"
#       - pattern: "**/*.html"
#         headers:
#           cache-control: "max-age=86400"

# Workers (for background jobs)
workers:
  - name: worker
    source_dir: /backend
    github:
      repo: your-username/homegenie
      branch: main
      deploy_on_push: true
    
    build_command: |
      go mod download
      CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o worker ./cmd/worker
    
    run_command: ./worker
    
    instance_count: 1
    instance_size_slug: basic-xxs
    
    # Environment variables
    envs:
      - key: WORKER_TYPE
        value: background
      - key: DB_HOST
        value: ${backend.DATABASE_URL}
      - key: DB_PORT
        value: "25060"
      - key: DB_NAME
        scope: RUN_TIME
        type: SECRET
        value: DB_NAME
      - key: DB_USER
        scope: RUN_TIME
        type: SECRET
        value: DB_USER
      - key: DB_PASSWORD
        scope: RUN_TIME
        type: SECRET
        value: DB_PASSWORD

# Jobs (for one-time tasks like migrations)
jobs:
  - name: migrate
    kind: PRE_DEPLOY
    source_dir: /backend
    github:
      repo: your-username/homegenie
      branch: main
    
    build_command: |
      go mod download
      CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o migrate ./cmd/migrate
    
    run_command: ./migrate
    
    instance_size_slug: basic-xxs
    
    # Environment variables
    envs:
      - key: DB_HOST
        value: ${backend.DATABASE_URL}
      - key: DB_PORT
        value: "25060"
      - key: DB_NAME
        scope: RUN_TIME
        type: SECRET
        value: DB_NAME
      - key: DB_USER
        scope: RUN_TIME
        type: SECRET
        value: DB_USER
      - key: DB_PASSWORD
        scope: RUN_TIME
        type: SECRET
        value: DB_PASSWORD

# Alerts
alerts:
  - rule: CPU_UTILIZATION
    operator: GREATER_THAN
    value: 80
    window: FIVE_MINUTES
    disabled: false
  
  - rule: MEM_UTILIZATION
    operator: GREATER_THAN
    value: 80
    window: FIVE_MINUTES
    disabled: false
  
  - rule: RESTART_COUNT
    operator: GREATER_THAN
    value: 5
    window: FIVE_MINUTES
    disabled: false

# Features
features:
  - buildpack-stack=ubuntu-22

# Domains (configure in DO control panel)
# domains:
#   - domain: homegenie.yourdomain.com
#     type: PRIMARY
#   - domain: www.homegenie.yourdomain.com
#     type: ALIAS
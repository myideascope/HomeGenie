# Cloud Build configuration for HomeGenie
# This file automates building and deploying the application to Cloud Run

steps:
  # Build backend image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-backend'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/homegenie-backend:$SHORT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/homegenie-backend:latest'
      - '-f'
      - './backend/Dockerfile'
      - './backend'
    waitFor: ['-']

  # Build frontend image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-frontend'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/homegenie-frontend:$SHORT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/homegenie-frontend:latest'
      - '-f'
      - './frontend/Dockerfile'
      - './frontend'
      - '--build-arg'
      - 'REACT_APP_API_URL=https://homegenie-backend-$${CLOUD_RUN_SERVICE_ACCOUNT_SUFFIX}.run.app/api'
    waitFor: ['-']

  # Push backend image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-backend'
    args:
      - 'push'
      - '--all-tags'
      - 'gcr.io/$PROJECT_ID/homegenie-backend'
    waitFor: ['build-backend']

  # Push frontend image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-frontend'
    args:
      - 'push'
      - '--all-tags'
      - 'gcr.io/$PROJECT_ID/homegenie-frontend'
    waitFor: ['build-frontend']

  # Deploy backend to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-backend'
    args:
      - 'run'
      - 'deploy'
      - 'homegenie-backend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/homegenie-backend:$SHORT_SHA'
      - '--region'
      - '$_REGION'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--service-account'
      - '$_SERVICE_ACCOUNT'
      - '--vpc-connector'
      - '$_VPC_CONNECTOR'
      - '--vpc-egress'
      - 'private-ranges-only'
      - '--min-instances'
      - '$_BACKEND_MIN_INSTANCES'
      - '--max-instances'
      - '$_BACKEND_MAX_INSTANCES'
      - '--cpu'
      - '$_BACKEND_CPU'
      - '--memory'
      - '$_BACKEND_MEMORY'
      - '--set-env-vars'
      - 'API_PORT=8080,API_HOST=0.0.0.0,DB_HOST=$_DB_HOST,DB_PORT=5432,DB_NAME=$_DB_NAME,DB_USER=$_DB_USER,OTEL_SERVICE_NAME=homegenie-backend,OTEL_RESOURCE_ATTRIBUTES=service.name=homegenie-backend\\,service.version=$SHORT_SHA\\,deployment.environment=$_ENVIRONMENT,GOOGLE_CLOUD_PROJECT=$PROJECT_ID'
      - '--set-secrets'
      - 'DB_PASSWORD=$_DB_PASSWORD_SECRET:latest,JWT_SECRET=$_JWT_SECRET:latest'
    waitFor: ['push-backend']

  # Deploy frontend to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-frontend'
    args:
      - 'run'
      - 'deploy'
      - 'homegenie-frontend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/homegenie-frontend:$SHORT_SHA'
      - '--region'
      - '$_REGION'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--service-account'
      - '$_SERVICE_ACCOUNT'
      - '--min-instances'
      - '$_FRONTEND_MIN_INSTANCES'
      - '--max-instances'
      - '$_FRONTEND_MAX_INSTANCES'
      - '--cpu'
      - '$_FRONTEND_CPU'
      - '--memory'
      - '$_FRONTEND_MEMORY'
    waitFor: ['push-frontend', 'deploy-backend']

  # Update frontend with backend URL
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'update-frontend-config'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Get backend URL
        BACKEND_URL=$(gcloud run services describe homegenie-backend --region=$_REGION --format='value(status.url)')
        
        # Update frontend with backend URL
        gcloud run services update homegenie-frontend \
          --region=$_REGION \
          --set-env-vars="REACT_APP_API_URL=$${BACKEND_URL}/api"
    waitFor: ['deploy-frontend']

  # Run database migrations (optional)
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'run-migrations'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Create a Cloud Run job to run migrations
        gcloud run jobs create homegenie-migrate-$SHORT_SHA \
          --image=gcr.io/$PROJECT_ID/homegenie-backend:$SHORT_SHA \
          --region=$_REGION \
          --service-account=$_SERVICE_ACCOUNT \
          --vpc-connector=$_VPC_CONNECTOR \
          --vpc-egress=private-ranges-only \
          --set-env-vars="DB_HOST=$_DB_HOST,DB_PORT=5432,DB_NAME=$_DB_NAME,DB_USER=$_DB_USER" \
          --set-secrets="DB_PASSWORD=$_DB_PASSWORD_SECRET:latest" \
          --args="migrate" \
          --task-timeout=300 \
          --max-retries=3 || true
        
        # Execute the migration job
        gcloud run jobs execute homegenie-migrate-$SHORT_SHA --region=$_REGION --wait || true
        
        # Clean up the migration job
        gcloud run jobs delete homegenie-migrate-$SHORT_SHA --region=$_REGION --quiet || true
    waitFor: ['deploy-backend']

# Build options
options:
  machineType: 'E2_HIGHCPU_8'
  substitutionOption: 'ALLOW_LOOSE'
  logging: 'CLOUD_LOGGING_ONLY'
  dynamicSubstitutions: true

# Substitution variables (set these in your trigger)
substitutions:
  _REGION: 'us-central1'
  _ENVIRONMENT: 'production'
  _SERVICE_ACCOUNT: 'homegenie-cloudrun-sa@$PROJECT_ID.iam.gserviceaccount.com'
  _VPC_CONNECTOR: 'homegenie-connector'
  _DB_HOST: '10.0.0.3'  # Replace with your Cloud SQL private IP
  _DB_NAME: 'homegenie'
  _DB_USER: 'homegenie'
  _DB_PASSWORD_SECRET: 'homegenie-db-password'
  _JWT_SECRET: 'homegenie-jwt-secret'
  _BACKEND_MIN_INSTANCES: '1'
  _BACKEND_MAX_INSTANCES: '10'
  _FRONTEND_MIN_INSTANCES: '1'
  _FRONTEND_MAX_INSTANCES: '5'
  _BACKEND_CPU: '1000m'
  _BACKEND_MEMORY: '2Gi'
  _FRONTEND_CPU: '1000m'
  _FRONTEND_MEMORY: '1Gi'

# Images to store in Container Registry
images:
  - 'gcr.io/$PROJECT_ID/homegenie-backend:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/homegenie-backend:latest'
  - 'gcr.io/$PROJECT_ID/homegenie-frontend:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/homegenie-frontend:latest'

# Timeout for the entire build
timeout: '1800s'

# Available environment variables in build:
# $PROJECT_ID - Google Cloud Project ID
# $BUILD_ID - Cloud Build build ID
# $SHORT_SHA - Short SHA of the commit
# $BRANCH_NAME - Git branch name
# $TAG_NAME - Git tag name (if triggered by tag)
# $COMMIT_SHA - Full SHA of the commit